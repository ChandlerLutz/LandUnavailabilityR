% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polygon_cleaning_functions.R
\name{lu_st_binary_polygon_apply}
\alias{lu_st_binary_polygon_apply}
\title{Apply a function to associated polygons using \code{sf} goemetric
predicates}
\usage{
lu_st_binary_polygon_apply(
  DT,
  sf.obj,
  vars,
  remove.main.polygon = TRUE,
  st_binary_fun,
  fun,
  ...
)
}
\arguments{
\item{DT}{a \code{data.table} that has a column named \code{GEOID}
and variables whose values will be subject to computation using
\code{fun}}

\item{sf.obj}{the \code{sf} object that holds the shapefiles
(polygons)}

\item{vars}{a character vector of variables (columns) in \code{DT}
that are used in computation}

\item{remove.main.polygon}{(logical) If TRUE, the main polygon will
be removed (not be used) in the computation. Default is
\code{TRUE}}

\item{st_binary_fun}{a binary predicate function from the \code{sf}
package. See \code{?sf::geos_binary_pred} for possible
functions}

\item{fun}{the function to be applied.}

\item{...}{optional arguments to \code{fun}}
}
\value{
a \code{data.table}, similar to \code{DT}, with the new
    variables added. The new variables will have a \code{vars} with
    a ".out" suffix
}
\description{
Using a goemetric binary predicates from the \code{sf} package,
such as \code{st_touches}, this function applies a function to the
associated polygons. For a list of compatable geometric binary
predicate functions from the \code{sf} package, see
\code{?sf::geos_binary_pred}.
}
\examples{
##The saiz data
data(saiz.sf)

##the variables
vars <- c("total.unavailable", "slope.unavailable")


##Example of land unavailability output
data(land.unavailability.example)

##Calculate the mean of each variable in vars removing NA values
out <- lu_st_binary_polygon_apply(land.unavailability.example,
                                  saiz.sf,
                                  vars = vars,
                                  st_binary_fun = st_touches,
                                  fun = mean, na.rm = TRUE)
print(out)

##Another example using length()
out <- lu_st_binary_polygon_apply(land.unavailability.example,
                                  saiz.sf,
                                  vars = vars,
                                  st_binary_fun = st_touches,
                                  fun = length)
print(out)

}
